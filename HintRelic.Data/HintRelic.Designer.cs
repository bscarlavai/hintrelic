//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace HintRelic.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class hintrelicEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new hintrelicEntities object using the connection string found in the 'hintrelicEntities' section of the application configuration file.
        /// </summary>
        public hintrelicEntities() : base("name=hintrelicEntities", "hintrelicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new hintrelicEntities object.
        /// </summary>
        public hintrelicEntities(string connectionString) : base(connectionString, "hintrelicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new hintrelicEntities object.
        /// </summary>
        public hintrelicEntities(EntityConnection connection) : base(connection, "hintrelicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="hintrelicModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="log_id">Initial value of the log_id property.</param>
        /// <param name="log_date">Initial value of the log_date property.</param>
        /// <param name="log_category">Initial value of the log_category property.</param>
        /// <param name="log_description">Initial value of the log_description property.</param>
        /// <param name="stack_trace">Initial value of the stack_trace property.</param>
        public static Log CreateLog(global::System.String log_id, global::System.DateTime log_date, global::System.String log_category, global::System.String log_description, global::System.String stack_trace)
        {
            Log log = new Log();
            log.log_id = log_id;
            log.log_date = log_date;
            log.log_category = log_category;
            log.log_description = log_description;
            log.stack_trace = stack_trace;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String log_id
        {
            get
            {
                return _log_id;
            }
            set
            {
                if (_log_id != value)
                {
                    Onlog_idChanging(value);
                    ReportPropertyChanging("log_id");
                    _log_id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("log_id");
                    Onlog_idChanged();
                }
            }
        }
        private global::System.String _log_id;
        partial void Onlog_idChanging(global::System.String value);
        partial void Onlog_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime log_date
        {
            get
            {
                return _log_date;
            }
            set
            {
                Onlog_dateChanging(value);
                ReportPropertyChanging("log_date");
                _log_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("log_date");
                Onlog_dateChanged();
            }
        }
        private global::System.DateTime _log_date;
        partial void Onlog_dateChanging(global::System.DateTime value);
        partial void Onlog_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String log_category
        {
            get
            {
                return _log_category;
            }
            set
            {
                Onlog_categoryChanging(value);
                ReportPropertyChanging("log_category");
                _log_category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("log_category");
                Onlog_categoryChanged();
            }
        }
        private global::System.String _log_category;
        partial void Onlog_categoryChanging(global::System.String value);
        partial void Onlog_categoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String log_description
        {
            get
            {
                return _log_description;
            }
            set
            {
                Onlog_descriptionChanging(value);
                ReportPropertyChanging("log_description");
                _log_description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("log_description");
                Onlog_descriptionChanged();
            }
        }
        private global::System.String _log_description;
        partial void Onlog_descriptionChanging(global::System.String value);
        partial void Onlog_descriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stack_trace
        {
            get
            {
                return _stack_trace;
            }
            set
            {
                Onstack_traceChanging(value);
                ReportPropertyChanging("stack_trace");
                _stack_trace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stack_trace");
                Onstack_traceChanged();
            }
        }
        private global::System.String _stack_trace;
        partial void Onstack_traceChanging(global::System.String value);
        partial void Onstack_traceChanged();

        #endregion
    
    }

    #endregion
    
}
